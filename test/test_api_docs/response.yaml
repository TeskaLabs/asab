openapi: 3.0.1
info:
  title: MySuperCoolApp
  description: 'Running on: <strong>roztomila-veverka</strong> on: <strong>[(''0.0.0.0'',
    8000)]</strong><p>This is the best app ever.</p>'
  contact:
    name: ASAB microservice
    url: https://www.github.com/teskalabs/asab
  version: {}
servers:
- url: /
  description: Here
paths:
  /users:
    get:
      summary: ''
      description: '


        Handler: `MyBeautifulHandler.tick()`'
      responses:
        '200':
          description: Success
      tags: MyBeautifulHandler
  /users/{username}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                age:
                  type: number
      summary: Create user with ID
      description: 'Create user with ID


        ----

        tags:[superUser]


        Handler: `MyBeautifulHandler.createUser()`'
      responses:
        '200':
          description: Success
      tags: MyBeautifulHandler
      parameters:
      - in: path
        name: username
        required: true
  /users/{username}/{id}:
    get:
      summary: Read user with ID
      description: 'Read user with ID


        ----

        tags:[superUser]


        Handler: `MyBeautifulHandler.readUser()`'
      responses:
        '200':
          description: Success
      tags: MyBeautifulHandler
      parameters:
      - in: path
        name: username
        required: true
      - in: path
        name: id
        required: true
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                age:
                  type: number
      summary: Update username.
      description: 'Update username.


        Handler: `MyBeautifulHandler.updateUser()`'
      responses:
        '200':
          description: Success
      tags: MyBeautifulHandler
      parameters:
      - in: path
        name: username
        required: true
      - in: path
        name: id
        required: true
    delete:
      summary: Delete user completely.
      description: "Delete user completely.\n        \n\nHandler: `MyBeautifulHandler.deleteUser()`"
      responses:
        '200':
          description: Success
      tags: MyBeautifulHandler
      parameters:
      - in: path
        name: username
        required: true
      - in: path
        name: id
        required: true
  /asab/v1/environ:
    get:
      summary: It returns a JSON response containing the contents of the environment
        variables.
      description: "It returns a JSON response containing the contents of the environment\
        \ variables.\n\nExample:\n\n```\n{\n        \"LANG\": \"en_GB.UTF-8\",\n \
        \       \"SHELL\": \"/bin/zsh\",\n        \"HOME\": \"/home/foobar\",\n}\n\
        \n```\n\n\nHandler: `APIWebHandler.environ()`"
      responses:
        '200':
          description: Success
      tags:
      - asab.api
  /asab/v1/config:
    get:
      summary: It returns the JSON with the config of the ASAB service.
      description: "It returns the JSON with the config of the ASAB service.\n\nIMPORTANT:\
        \ All passwords are erased.\n\nExample:\n\n```\n{\n        \"general\": {\n\
        \                \"config_file\": \"\",\n                \"tick_period\":\
        \ \"1\",\n                \"uid\": \"\",\n                \"gid\": \"\"\n\
        \        },\n        \"asab:metrics\": {\n                \"native_metrics\"\
        : \"true\",\n                \"expiration\": \"60\"\n        }\n}\n```\n\n\
        \nHandler: `APIWebHandler.config()`"
      responses:
        '200':
          description: Success
      tags:
      - asab.api
  /asab/v1/logs:
    get:
      summary: Get logs.
      description: 'Get logs.


        Handler: `WebApiLoggingHandler.get_logs()`'
      responses:
        '200':
          description: Success
      tags:
      - asab.log
  /asab/v1/logws:
    get:
      summary: '# Live feed of logs over websocket'
      description: "# Live feed of logs over websocket\n\nUsable with e.g. with React\
        \ Lazylog\n\n```\n<LazyLog\n        url={this.AsabLogWsURL}\n        follow\n\
        \        websocket\n        websocketOptions={{\n                formatMessage:\
        \ e => log_message_format(e),\n        }}\n/>\n\nfunction log_message_format(e)\
        \ {\n        e = JSON.parse(e)\n        var msg = e.t;\n        if (e.l !=\
        \ undefined) msg += \" \" + e.l;\n        if (e.sd != undefined) msg += `\
        \ ${JSON.stringify(e.sd)}`;\n        if (e.M != undefined) msg += \" \" +\
        \ e.M;\n        if (e.C != undefined) msg += ` [${e.C}]`\n        return msg;\n\
        }\n```\n\n\nHandler: `WebApiLoggingHandler.ws()`"
      responses:
        '200':
          description: Success
      tags:
      - asab.log
      externalDocs:
        description: React Lazylog
        url: https://github.com/mozilla-frontend-infra/react-lazylog#readme
  /asab/v1/changelog:
    get:
      summary: It returns a change log file.
      description: 'It returns a change log file.


        Handler: `APIWebHandler.changelog()`'
      responses:
        '200':
          description: Success
      tags:
      - asab.api
  /asab/v1/manifest:
    get:
      summary: It returns the manifest of the ASAB service.
      description: "It returns the manifest of the ASAB service.\n\nTHe manifest is\
        \ a JSON object loaded from `MANIFEST.json` file.\nThe manifest contains the\
        \ creation (build) time and the version of the ASAB service.\nThe `MANIFEST.json`\
        \ is produced during the creation of docker image by `asab-manifest.py` script.\n\
        \nExample of `MANIFEST.json`:\n\n```\n{\n        'created_at': 2022-03-21T15:49:37.14000,\n\
        \        'version' :v22.9-4\n}\n```\n\n\nHandler: `APIWebHandler.manifest()`"
      responses:
        '200':
          description: Success
      tags:
      - asab.api
  /doc:
    get:
      summary: Access the API documentation using a browser.
      description: 'Access the API documentation using a browser.


        Handler: `DocWebHandler.doc()`'
      responses:
        '200':
          description: Success
      tags:
      - asab.doc
  /oauth2-redirect.html:
    get:
      summary: Required for the authorization to work.
      description: 'Required for the authorization to work.


        Handler: `<function DocWebHandler.oauth2_redirect at 0x7f614c0695a0>`'
      responses:
        '200':
          description: Success
      tags:
      - asab.doc
  /asab/v1/openapi:
    get:
      summary: Download OpenAPI (version 3) API documentation (aka Swagger) in YAML.
      description: OpenAPI Specification
      responses:
        '200':
          description: Success
      tags:
      - asab.doc
      externalDocs: null
      url: https://swagger.io/specification/
components:
  securitySchemes:
    oAuth:
      type: oauth2
      description: ''
      flows:
        authorizationCode:
          authorizationUrl: google.com
          tokenUrl: zmrzlina.org
          scopes:
            openid: Required Scope for OpenIDConnect!
            scope: Pravoveta scope.
